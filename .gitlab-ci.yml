# docker-build-master:
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#     - touch  latest_tag.txt
#     # Extract the current tag from a file (assuming it's stored in latest_tag.txt)
#     - export CURRENT_TAG=$(cat latest_tag.txt)
#     # Extract the numeric part of the tag
#     - TAG_NUMBER=$(echo "$TAG_SUFFIX" | awk -F'.' '{print $1}')
#     # Increment the numeric part
#     - NEW_TAG_NUMBER=$((TAG_NUMBER + 1))
#     # Construct the new tag
#     - export TAG_NAME="1.$NEW_TAG_NUMBER"
#   script:
#     - echo "Building Docker image..."
#     - export CI_REGISTRY_IMAGE_WITH_TAG="$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$TAG_NAME"
#     - docker build --pull -t "$CI_REGISTRY_IMAGE_WITH_TAG" .
#     - echo "Pushing Docker image to registry..."
#     - docker push "$CI_REGISTRY_IMAGE_WITH_TAG"
#     - echo "Docker image pushed successfully."

#   only:
#     - v2/develop




# This file is a template, and might need editing before it works on your project.
stages:
  - build
docker-build-master:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Building Docker image..."
    - export ROUNDED_PIPELINE_IID=$(printf "%02d" $((CI_PIPELINE_IID % 100)))
    - export TAG_NAME="$CI_COMMIT_REF_SLUG"-"1.$ROUNDED_PIPELINE_IID"
    - export CI_REGISTRY_IMAGE_WITH_TAG="$CI_REGISTRY_IMAGE:$TAG_NAME"
    - docker build --pull -t "$CI_REGISTRY_IMAGE_WITH_TAG" .
    - echo "Pushing Docker image to registry..."
    - docker push "$CI_REGISTRY_IMAGE_WITH_TAG"
    - echo "Docker image pushed successfully."
  only:
    - v2/develop

